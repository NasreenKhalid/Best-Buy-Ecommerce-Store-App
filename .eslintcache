[{"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/index.js":"1","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/App.js":"2","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Product/styles.js":"3","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Product/Product.jsx":"4","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Products.jsx":"5","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Navbar/styles.js":"6","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Navbar/Navbar.jsx":"7","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/index.js":"8","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/lib/commerce.js":"9","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/styles.js":"10","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/Cart.jsx":"11","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/styles.js":"12","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/CartItem/CartItem.jsx":"13","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Checkout/Checkout.jsx":"14","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Checkout/styles.js":"15","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/CartItem/styles.js":"16","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/AddressForm.jsx":"17","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/CustomTextField.jsx":"18","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/PaymentForm.jsx":"19","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Review.jsx":"20"},{"size":201,"mtime":1608467527079,"results":"21","hashOfConfig":"22"},{"size":2464,"mtime":1608725095449,"results":"23","hashOfConfig":"22"},{"size":402,"mtime":1608469224185,"results":"24","hashOfConfig":"22"},{"size":1099,"mtime":1608549337603,"results":"25","hashOfConfig":"22"},{"size":573,"mtime":1608549240557,"results":"26","hashOfConfig":"22"},{"size":1564,"mtime":1608471370938,"results":"27","hashOfConfig":"22"},{"size":1338,"mtime":1608557379311,"results":"28","hashOfConfig":"22"},{"size":210,"mtime":1608563839603,"results":"29","hashOfConfig":"22"},{"size":139,"mtime":1608547797271,"results":"30","hashOfConfig":"22"},{"size":286,"mtime":1608472149264,"results":"31","hashOfConfig":"22"},{"size":1777,"mtime":1608563673726,"results":"32","hashOfConfig":"22"},{"size":570,"mtime":1608554879869,"results":"33","hashOfConfig":"22"},{"size":1212,"mtime":1608558207338,"results":"34","hashOfConfig":"22"},{"size":3300,"mtime":1608726955739,"results":"35","hashOfConfig":"22"},{"size":1157,"mtime":1608564075333,"results":"36","hashOfConfig":"22"},{"size":332,"mtime":1608555552411,"results":"37","hashOfConfig":"22"},{"size":4536,"mtime":1608645343265,"results":"38","hashOfConfig":"22"},{"size":525,"mtime":1608726190685,"results":"39","hashOfConfig":"22"},{"size":2436,"mtime":1608726853647,"results":"40","hashOfConfig":"22"},{"size":938,"mtime":1608647494588,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"174dux6",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"67"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/index.js",[],["91","92"],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/App.js",[],["93","94"],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Product/styles.js",[],["95","96"],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Product/Product.jsx",[],["97","98"],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/Products.jsx",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Navbar/styles.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Navbar/Navbar.jsx",["99","100"],"import React from 'react'\nimport {AppBar, Toolbar,IconButton, Badge, MenuItem, Menu, Typography} from '@material-ui/core';\nimport {ShoppingCart} from '@material-ui/icons'\nimport { Link, useLocation} from 'react-router-dom'\n\nimport logo from '../../assets/logo.png'\nimport useStyles from './styles';\n\nconst Navbar = ({totalItems}) => {\n    const classes = useStyles();\n    const location = useLocation();\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar} color=\"inherit\">\n                <Toolbar>\n                    <Typography component={Link} to=\"/\" variant=\"h6\" className={classes.title} color=\"inherit\">\n                        <img src={logo} alt=\"Commerce.js\" height=\"25px\" className={classes.image}/>\n                        Best Buy Store\n                    </Typography>\n        <div className={classes.grow}>\n            {(location.pathname === '/') && (\n                <div className={classes.button}>\n        <IconButton component={Link} to=\"/cart\" aria-label=\"Show cart items\" color=\"inherit\">\n        <Badge badgeContent={totalItems} color=\"secondary\">\n        <ShoppingCart />\n        </Badge>\n        </IconButton>\n        </div>\n            )}\n        \n                    </div>\n                </Toolbar>\n\n            </AppBar>\n        </div>\n    )\n}\n\nexport default Navbar\n","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/index.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/lib/commerce.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Products/styles.js",[],["101","102"],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/Cart.jsx",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/styles.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/CartItem/CartItem.jsx",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Checkout/Checkout.jsx",["103"],"import React,{useState, useEffect} from 'react'\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Button, Divider,CssBaseline  } from '@material-ui/core'\nimport {Link, useHistory} from 'react-router-dom'\nimport useStyles from './styles'\nimport AddressForm from '../AddressForm'\nimport PaymentForm from '../PaymentForm'\nimport {commerce} from '../../../lib/commerce'\n\nconst steps = ['Shipping address', 'Payment details']\n\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\n    const [activeStep, setActiveStep] = useState(0);\n    const classes = useStyles();\n    const [checkoutToken, setCheckoutToken ] =useState(null)\n    const [shippingData, setShippingData] = useState({})\n    const [isFinished, setIsFinished] = useState(false)\n    const history = useHistory();\n\n    useEffect(() => {\nconst generateToken = async () => {\n  try{\nconst token = await commerce.checkout.generateToken(cart.id,{ type:'cart' } )\n// console.log(token)\nsetCheckoutToken(token)\n  } catch(error){\nconsole.log(error)\nhistory.pushState('/')\n  }\n}\ngenerateToken();\n}, [cart]);\n\nconst nextStep = () => setActiveStep((prevActiveStep)=> prevActiveStep+1)\nconst backStep = () => setActiveStep((prevActiveStep)=> prevActiveStep-1)\n\nconst next = (data) => {\nsetShippingData(data);\nnextStep();\n}\n\nconst timeout = () => {\n  setTimeout(() => {\n  setIsFinished(true)\n  }, 3000)\n}\n\nlet Confirmation = () => order.customer ? (\n <>\n <div>\n   <Typography variant=\"h5\">Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\n    <Divider className={classes.divider}/>\n    <Typography variant=\"subtitle2\">Order ref: {order.customer_reference}</Typography>\n </div>\n <br />\n <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n </>\n) : isFinished ? (\n  <>\n <div>\n   <Typography variant=\"h5\">Thank you for your purchase</Typography>\n    <Divider className={classes.divider}/>\n  \n </div>\n <br />\n <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n </>\n) : ( <div className={classes.spinner}>\n  <CircularProgress />\n</div>\n);\n\nif(error) {\n <div>\n   <Typography variant=\"h5\">Error: {error}</Typography>\n   <Button component={Link} to=\"/\" variant=\"outlined\" type=\"button\">Back to Home</Button>\n </div>\n\n}\n\n    const Form = () => activeStep === 0 \n    ? <AddressForm checkoutToken={checkoutToken} next={next}/>\n    : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} backStep={backStep} onCaptureCheckout={onCaptureCheckout} nextStep={nextStep} timeout={timeout}/>\n\n    return (\n        <>\n        <CssBaseline />\n          <div className={classes.toolbar} />\n          <main className={classes.layout}>\n            <Paper className={classes.paper}>\n              <Typography variant=\"h4\" align=\"center\">Checkout</Typography>\n              <Stepper activeStep={activeStep} className={classes.stepper}>\n                {steps.map((step) => (\n                  <Step key={step}>\n                    <StepLabel>{step}</StepLabel>\n                  </Step>\n                ))}\n              </Stepper>\n              {activeStep === steps.length ? <Confirmation /> : (checkoutToken &&  <Form />)} \n            </Paper>\n          </main>\n        </>\n      );\n}\n\nexport default Checkout\n","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Checkout/styles.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/Cart/CartItem/styles.js",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/AddressForm.jsx",["104","105"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, next }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput name=\"firstName\" label=\"First name\" />\n            <FormInput name=\"lastName\" label=\"Last name\" />\n            <FormInput name=\"address1\" label=\"Address line 1\" />\n            <FormInput name=\"email\" label=\"Email\" />\n            <FormInput name=\"city\" label=\"City\" />\n            <FormInput name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/CustomTextField.jsx",[],"/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/PaymentForm.jsx",["106"],"import React from 'react'\nimport {Typography, Button, Divider} from '@material-ui/core'\nimport {Elements, CardElement, ElementConsumer, ElementsConsumer} from '@stripe/react-stripe-js'\nimport {loadStripe} from '@stripe/stripe-js'\nimport Review from './Review'\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY)\nconsole.log(process.env.REACT_APP_STRIPE_PUBLIC_KEY)\n\nconst PaymentForm = ({shippingData, checkoutToken, backStep, onCaptureCheckout, nextStep, timeout}) => {\n\n    const handleSubmit = async (event, elements, stripe) => {\n        event.preventDefault();\n    \n        if (!stripe || !elements) return;\n    \n        const cardElement = elements.getElement(CardElement);\n    \n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\n    \n        if (error) {\n          console.log('[error]', error);\n        } else {\n          const orderData = {\n            line_items: checkoutToken.live.line_items,\n            customer: { firstname: shippingData.firstName, lastname: shippingData.lastName, email: shippingData.email },\n            shipping: { name: 'International', street: shippingData.address1, town_city: shippingData.city, county_state: shippingData.shippingSubdivision, postal_zip_code: shippingData.zip, country: shippingData.shippingCountry },\n            fulfillment: { shipping_method: shippingData.shippingOption },\n            payment: {\n              gateway: 'stripe',\n              stripe: {\n                payment_method_id: paymentMethod.id,\n              },\n            },\n          };\n    \n          onCaptureCheckout(checkoutToken.id, orderData);\n          timeout();\n          nextStep();\n        }\n      };\n    return (\n        <div>\n<Review checkoutToken={checkoutToken}/>\n<Divider />\n<Typography variant=\"h6\" gutterBottom style={{margin: '20px 0'}}>Payment Method</Typography>\n<Elements stripe={stripePromise}>\n<ElementsConsumer>\n    {(elements, stripe) => (\n<form onSubmit = {(e) => handleSubmit(e,elements, stripe)}>\n    <CardElement />\n<br /><br />\n<div style={{display:'flex', justifyContent:'space-between'}}>\n<Button variant=\"outline\" onClick={backStep}>Back</Button>\n<Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">Pay {checkoutToken.live.subtotal.formatted_with_symbol}</Button>\n</div>\n</form>\n    )}\n</ElementsConsumer>\n</Elements>\n        </div>\n    )\n}\n\nexport default PaymentForm\n","/Users/nasreenkhalid/Documents/React_Projects/ecommerce-app/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"107","replacedBy":"111"},{"ruleId":"109","replacedBy":"112"},{"ruleId":"107","replacedBy":"113"},{"ruleId":"109","replacedBy":"114"},{"ruleId":"107","replacedBy":"115"},{"ruleId":"109","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":2,"column":44,"nodeType":"119","messageId":"120","endLine":2,"endColumn":52},{"ruleId":"117","severity":1,"message":"121","line":2,"column":54,"nodeType":"119","messageId":"120","endLine":2,"endColumn":58},{"ruleId":"107","replacedBy":"122"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":31,"column":4,"nodeType":"126","endLine":31,"endColumn":10,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":41,"column":6,"nodeType":"126","endLine":41,"endColumn":8,"suggestions":"129"},{"ruleId":"124","severity":1,"message":"130","line":49,"column":6,"nodeType":"126","endLine":49,"endColumn":27,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"132","line":3,"column":32,"nodeType":"119","messageId":"120","endLine":3,"endColumn":47},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],["133"],["134"],["133"],["134"],["133"],["134"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["133"],["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["135"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["137"],"'ElementConsumer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [cart, history]",{"range":"144","text":"145"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"146","text":"147"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"148","text":"149"},[1080,1086],"[cart, history]",[1668,1670],"[checkoutToken.id]",[1913,1934],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]